using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using SampleParser;

namespace ThreadClassifier
{
    // Maps a malware process name to a malware family name.
    public class MalwareFamilyMap
    {
        private readonly Dictionary<string, string> processNameToFamilyMap = new Dictionary<string, string>();

        public MalwareFamilyMap(string filename)
        {
            ParseFile(filename);
        }

        private void ParseFile(string filename)
        {
            using (var rd = new StreamReader(filename))
            {
                while (!rd.EndOfStream)
                {
                    var splits = rd.ReadLine().Split(',');
                    if (splits.Length == 2)
                    {
                        if (!processNameToFamilyMap.ContainsKey(splits[0]))
                        {
                            processNameToFamilyMap.Add(splits[0], splits[1]);
                        }
                        else
                        {
                           // Console.WriteLine("Duplicate process name to malware family mapping found.  Key={0}\tValue={1}", 
                           //     splits[0], splits[1]);
                        }
                    }
                }
            }
        }

        public string GetAssociatedMalwareFamilyName(string processName)
        {
            string rv = null;

            processNameToFamilyMap.TryGetValue(processName, out rv);

            return rv;
        }

        public List<string> GetMalwareFamilyList()
        {
            return processNameToFamilyMap.Values.Distinct().ToList();
        }
    }
}
